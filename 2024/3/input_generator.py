### Note: It's hard to know the rules used to generate the actual rules, but all solutions should work properly with inputs generated by this.

from random import choice, randint

mul_args_range = (10, 999)
token_length = 4000

token_types = ('char', 'useless_statement', 'statement')

chars = ('!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '()', '{', '}', '{}' ', ', '\n', ';')
useless_statements = ("why", "how", "when", "who", "where", "from", "select")
statements = ("mul", "do()", "don't()")

output = []

for i in range(token_length):
    token_type = choice(token_types)
    match (token_type):
        case 'char':
            output.append(choice(chars))
        case 'useless_statement':
            args = randint(0, 1)

            output.append(choice(useless_statements))

            if not args:
                output.append("()")
            else: 
                output.append(f"({randint(mul_args_range[0], mul_args_range[1])},{randint(mul_args_range[0], mul_args_range[1])})")
        case 'statement':
            statement = choice(statements)
            if statement == 'mul':
                output.append(f"{statement}({randint(mul_args_range[0], mul_args_range[1])},{randint(mul_args_range[0], mul_args_range[1])})")
            else:
                output.append(statement)

file = open("2024/3/input.txt", 'w')

file.write(''.join(output))